createClient:
  x-swagger-router-controller: client
  post:
    description: Create client
    operationId: createClient
    produces:
    - application/json
    parameters:
    - name: client
      in: body
      description: Client to be created
      required: true
      schema:
        $ref: "model.yaml#/ClientModelCreate"
    responses:
      '200':
        description: Client Data
        schema:
          $ref: "model.yaml#/ClientModel"  
      '409':
        description: Duplicated client with the same email
        schema:
          "$ref": "model.yaml#/ErrorResponse"
      default:
        description: Error payload
        schema:
          "$ref": "model.yaml#/ErrorResponse"
  get:
    description: Get all the clients
    operationId: getAllClients
    produces:
    - application/json
    responses:
      '200':
        description: Clients Data
        schema:
          type: array
          items:
            $ref: "model.yaml#/ClientModel"
      default:
        description: Error payload
        schema:
          "$ref": "model.yaml#/ErrorResponse"
getClient:
  x-swagger-router-controller: client
  get:
    description: Get client base in UID
    operationId: getClient
    produces:
    - application/json
    parameters:
    - name: id
      in: path
      description: The id of the client that is requested
      required: true
      type: string
    responses:
      '200':
        description: Client Data
        schema:
          $ref: "model.yaml#/ClientModel"
      default:
        description: Error payload
        schema:
          "$ref": "model.yaml#/ErrorResponse"
  delete:
    description: Delete client base in UID
    operationId: deleteClient
    produces:
    - application/json
    parameters:
    - name: id
      in: path
      description: Id of the client to delete
      required: true
      type: string
    responses:
      '200':
        description: Client Data
        schema:
          $ref: "model.yaml#/DeleteClientModel"
      default:
        description: Error payload
        schema:
          "$ref": "model.yaml#/ErrorResponse"
  put:
    description: Modify client based on his UID
    operationId: modifyClient
    produces:
    - application/json
    parameters:
    - name: id
      in: path
      description: Id of the client to modify
      required: true
      type: string
    - name: data
      in: body
      description: Data to modify the cient
      required: true
      schema:
        $ref: "model.yaml#/ModifyClientModel"
    responses:
      '200':
        description: Success message confirmation
        schema:
          $ref: "model.yaml#/ModifyClientModel"
      default:
        description: Error payload
        schema:
          "$ref": "model.yaml#/ErrorResponse"